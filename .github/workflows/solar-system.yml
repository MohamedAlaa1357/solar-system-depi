name: solar system workflow
on:
    workflow_dispatch:
    push:
        branches:
            - main
            - 'feature/*'

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
    MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}

jobs:
    unit-testing:
        name: unit testing
        strategy:
          matrix:
            nodejs_version: [18,19,20]
            operating_system: [ubuntu-latest,macos-latest]
            exclude:
            - nodejs_version: 18
              operating_system: macos-latest

        runs-on: ${{matrix.operating_system}}
        steps:
            - name: checkout
              uses: actions/checkout@v4
             
            - name: ${{matrix.nodejs_version}}
              uses: actions/setup-node@v3
              with:
                node-version: ${{matrix.nodejs_version}}

            - name: install depand.
              run: npm install

            - name: unit testing
              id: nodejs-unit-testing-step
              run: npm test

            - name: upload artifact
              if: always() 
              uses: actions/upload-artifact@v3
              with:
                name: mocha-test-result
                path: test-results.xml
    code-coverage:
                  name: code-coverage
                  #needs: unit-testing
                  runs-on: ubuntu-latest
                  steps:
                      - name: checkout
                        uses: actions/checkout@v4
                       
                      - name: setup node js v 18
                        uses: actions/setup-node@v3
                        with:
                          node-version: 18
          
                      - name: install depand.
                        run: npm install
                      
                      - name: check code coverage
                        continue-on-error: true
                        run: npm run coverage

                      - name: archive test-result
                        uses: actions/upload-artifact@v3
                        with:
                         name: code-coverage-result
                         path: coverage
                         retention-days: 5
    docker:
          name: containeraization
          needs: [code-coverage, unit-testing]
          runs-on: ubuntu-latest

          steps:
            - name: checkout
              uses: actions/checkout@v4
            - name: docker_hub_login
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: build and push
              uses: docker/build-push-action@v5
              with:
                context: . 
                push: false
                tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            - name: docker_image_test
              run: |
                    docker images
                    docker run --name solar-system-app -d \
                         -p 3000:3000 \
                         -e MONGO_URI=$MONGO_URI \
                         -e MONGO_USERNAME=$MONGO_USERNAME \
                         -e MONGO_PASSWORD=$MONGO_PASSWORD \
                         ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
                
                    export IP=$(docker inspect -f '{{range .NetworkSettings.network}}{{.IPAddress}}{{end}}' solar-system-app)
                    echo $IP
                    docker inspect solar-system-app | grep -i IPAddress

                    echo testing image url using wget
                    wget -q -o - 127.0.0.1:3000/live | grep live

            - name: build and push
              uses: docker/build-push-action@v5
              with:
                  context: . 
                  push: true
                  tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}